name: PHP Composer

on:
   push:

  
    branches: [ "master" ]

  # pull_request:
  #   branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v3
    - name: Set up PHP
      uses: shivammathur/setup-php@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict
      
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install dependencies
      working-directory: backend
      run: composer install --prefer-dist --no-progress
    - name: Generate key
      # working-directory: backend
      run: php artisan key:generate
      
    - name: Execute tests (Unit and Feature test) via PHPUnit
      working-directory: backend
      run: vendor/bin/phpunit --coverage-clover=coverage.xml

    - name: Create coverage artifact
      uses: actions/upload-artifact@v2
      with:
          name: coverage-report
          path: backend/coverage.xml
           
    # - name: SonarQube Scan
    #   uses: sonarsource/sonarqube-scan-action@v2
    #   with:
    #       projectBaseDir:  backend
    #       args: >
    #           -Dsonar.projectKey=ajayingale12345_wishwell-backend
    #           -Dsonar.projectName=wishwell_backend
    #           -Dsonar.organization=ajayingale12345
    #           -Dsonar.sources=.
    #           -Dsonar.projectVersion=1.0
    #           -Dsonar.php.coverage.reportPaths=coverage.xml 
  
    #   env:
    #             SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #             SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    # - name: Send notification to slack from github using githubaction
    #   uses: slackapi/slack-github-action@v1.25.0
    #   with:
    #      payload: |
    #       {
    #        "text": "Sonar Analysis done "
    #        }
    #   env:
    #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}

    # - name: Run Trivy vulnerability scanner in repo mode
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       scan-type: 'fs'
    #       ignore-unfixed: true
    #       format: 'sarif'
    #       output: 'trivy-results.sarif'
    #       severity: 'CRITICAL'

    
    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       exit-code: '1'
    #       ignore-unfixed: true
    #       vuln-type: 'os,library'
    #       format: 'template'
    #       template: '@/contrib/sarif.tpl'
    #       output: 'trivy-results.sarif'
    #       severity: 'CRITICAL,HIGH'
    # - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       scan-type: 'fs'
    #       format: 'template'
    #       template: "@/contrib/html.tpl"
    #       output: 'dependency-results.sbom.html'
    #       image-ref: '.'
    #       github-pat: ${{ secrets.TOKEN_GITHUB }} 
      

    # - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #       scan-type: 'fs'
    #       format: 'github'
    #       output: 'dependency-results.sbom.json'
    #       image-ref: '.'
    #       github-pat: ${{ secrets.TOKEN_GITHUB }} 


    - name: Save sbom.json as Artifact
      uses: actions/upload-artifact@v2
      with:
          name: vulnerability-report
          path: backend/trivy-results.sarif
  security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
     - name: Install Snyk CLI
       run: npm install -g snyk

     - name: Authenticate Snyk
       run: snyk auth ${{ secrets.SNYK_TOKEN }}

     - name: Run Snyk to check for vulnerabilities
       run: snyk test --all-projects --severity-threshold=high
        
    
    # - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v3
    #   with:
    #       sarif_file: 'trivy-results.sarif'
      
