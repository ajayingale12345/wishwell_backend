name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up PHP
        uses: shivammathur/setup-php@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Generate key
        run: php artisan key:generate

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Execute tests (Unit and Feature test) via PHPUnit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Create coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: backend/coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: backend
          args: >
            -Dsonar.projectKey=ajayingale12345_wishwell-backend
            -Dsonar.projectName=wishwell_backend
            -Dsonar.organization=ajayingale12345
            -Dsonar.sources=.
            -Dsonar.projectVersion=1.0
            -Dsonar.php.coverage.reportPaths=coverage.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  notify:
    runs-on: ubuntu-latest
    needs: [build, test]
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Send notification to Slack from GitHub using GitHub Action
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Sonar Analysis done"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Uncomment the following steps if you want to include Trivy vulnerability scanning
  # trivy-scan:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   defaults:
  #     run:
  #       working-directory: backend
  #   steps:
  #     - name: Run Trivy vulnerability scanner in repo mode
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         scan-type: 'fs'
  #         ignore-unfixed: true
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'
  #         severity: 'CRITICAL'
  #
  #     - name: Save sbom.json as Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: vulnerability-report
  #         path: backend/trivy-results.sarif
  #
  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: 'trivy-results.sarif'
